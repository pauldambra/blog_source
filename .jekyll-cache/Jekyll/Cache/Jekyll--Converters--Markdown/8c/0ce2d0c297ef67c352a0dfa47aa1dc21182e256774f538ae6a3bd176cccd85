I"“R<p>Oh waitâ€¦ this is awful. AWRUCHKA. Right dry heaving done with.</p>

<p>It's a good job so few websites want to authenticate users and collect data on them otherwise we'd constantly have to write the same code oveâ€¦ what's that? Oh my! Everyone is going through this.</p>

<!--more-->

<p>Jesus no wonder people bang on about RoR. It makes this <em>easier</em> in comparison</p>

<p>Anyway - I'll forget how to do this before I have to do it again</p>

<p>So</p>

<ul>
  <li>fire up a new MVC3 web application</li>
  <li>Jump into nuget and Install-Package System.Web.ProvidersÂ </li>
  <li>Sort out a connection string for SQL CE</li>
  <li>Add a key to make sure the login link always points to <code class="language-plaintext highlighter-rouge">LogOn</code></li>
</ul>

<p>Now my <code class="language-plaintext highlighter-rouge">web.config</code> looks like this (edited out parts I haven't touched for something approximating brevity)</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span>
<span class="c">&lt;!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=152368
  --&gt;</span>
<span class="nt">&lt;configuration&gt;</span>
  <span class="nt">&lt;connectionStrings&gt;</span>
    <span class="nt">&lt;add</span> <span class="na">name=</span><span class="s">"users"</span> <span class="na">connectionString=</span><span class="s">"Data Source=|DataDirectory|users.sdf;"</span>
      <span class="na">providerName=</span><span class="s">"System.Data.SqlServerCe.4.0"</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;/connectionStrings&gt;</span>
  <span class="nt">&lt;appSettings&gt;</span>
    <span class="nt">&lt;add</span> <span class="na">key=</span><span class="s">"webpages:Version"</span> <span class="na">value=</span><span class="s">"1.0.0.0"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;add</span> <span class="na">key=</span><span class="s">"ClientValidationEnabled"</span> <span class="na">value=</span><span class="s">"true"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;add</span> <span class="na">key=</span><span class="s">"UnobtrusiveJavaScriptEnabled"</span> <span class="na">value=</span><span class="s">"true"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;add</span> <span class="na">key=</span><span class="s">"loginUrl"</span> <span class="na">value=</span><span class="s">"~/Account/LogOn"</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;/appSettings&gt;</span>
  <span class="nt">&lt;system.web&gt;</span>
    <span class="nt">&lt;authentication</span> <span class="na">mode=</span><span class="s">"Forms"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;forms</span> <span class="na">loginUrl=</span><span class="s">"~/Account/LogOn"</span> <span class="na">timeout=</span><span class="s">"2880"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/authentication&gt;</span>
    <span class="nt">&lt;membership</span> <span class="na">defaultProvider=</span><span class="s">"DefaultMembershipProvider"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;providers&gt;</span>
        <span class="nt">&lt;clear</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;add</span> <span class="na">name=</span><span class="s">"DefaultMembershipProvider"</span> <span class="na">type=</span><span class="s">"System.Web.Providers.DefaultMembershipProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"</span> <span class="na">connectionStringName=</span><span class="s">"users"</span> <span class="na">enablePasswordRetrieval=</span><span class="s">"false"</span> <span class="na">enablePasswordReset=</span><span class="s">"true"</span> <span class="na">requiresQuestionAndAnswer=</span><span class="s">"false"</span> <span class="na">requiresUniqueEmail=</span><span class="s">"false"</span> <span class="na">maxInvalidPasswordAttempts=</span><span class="s">"5"</span> <span class="na">minRequiredPasswordLength=</span><span class="s">"6"</span> <span class="na">minRequiredNonalphanumericCharacters=</span><span class="s">"0"</span> <span class="na">passwordAttemptWindow=</span><span class="s">"10"</span> <span class="na">applicationName=</span><span class="s">"/"</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;/providers&gt;</span>
    <span class="nt">&lt;/membership&gt;</span>
    <span class="nt">&lt;profile</span> <span class="na">defaultProvider=</span><span class="s">"DefaultProfileProvider"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;providers&gt;</span>
        <span class="nt">&lt;clear</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;add</span> <span class="na">name=</span><span class="s">"DefaultProfileProvider"</span> <span class="na">type=</span><span class="s">"System.Web.Providers.DefaultProfileProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"</span> <span class="na">connectionStringName=</span><span class="s">"users"</span> <span class="na">applicationName=</span><span class="s">"/"</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;/providers&gt;</span>
    <span class="nt">&lt;/profile&gt;</span>
    <span class="nt">&lt;roleManager</span> <span class="na">enabled=</span><span class="s">"false"</span> <span class="na">defaultProvider=</span><span class="s">"DefaultRoleProvider"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;providers&gt;</span>
        <span class="nt">&lt;clear</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;add</span> <span class="na">name=</span><span class="s">"AspNetWindowsTokenRoleProvider"</span> <span class="na">type=</span><span class="s">"System.Web.Security.WindowsTokenRoleProvider"</span> <span class="na">applicationName=</span><span class="s">"/"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;add</span> <span class="na">name=</span><span class="s">"DefaultRoleProvider"</span> <span class="na">type=</span><span class="s">"System.Web.Providers.DefaultRoleProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"</span> <span class="na">connectionStringName=</span><span class="s">"users"</span> <span class="na">applicationName=</span><span class="s">"/"</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;/providers&gt;</span>
    <span class="nt">&lt;/roleManager&gt;</span>
    <span class="nt">&lt;sessionState</span> <span class="na">mode=</span><span class="s">"InProc"</span> <span class="na">customProvider=</span><span class="s">"DefaultSessionProvider"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;providers&gt;</span>
        <span class="nt">&lt;add</span> <span class="na">name=</span><span class="s">"DefaultSessionProvider"</span> <span class="na">type=</span><span class="s">"System.Web.Providers.DefaultSessionStateProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"</span> <span class="na">connectionStringName=</span><span class="s">"DefaultConnection"</span> <span class="na">applicationName=</span><span class="s">"/"</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;/providers&gt;</span>
    <span class="nt">&lt;/sessionState&gt;</span>
  <span class="nt">&lt;/system.web&gt;</span>
<span class="nt">&lt;/configuration&gt;</span>
</code></pre></div></div>

<p>Now start a debug session for the web app. Click logon. Click Register. Fill in the form. Register. Click Logoff and stop the debug session in Visual Studio</p>

<p>You can see the new SQL CE database and have a look at the schema. The Memberships and Users tables have a new row. The new user.</p>

<p><img src="http://4.bp.blogspot.com/-w1VYrhrRydw/Tw7Aak9b3tI/AAAAAAAAAWw/dQllCHJ7Qjo/s1600/new-sdf-file.PNG" alt="ssms screenshots" /></p>

<p><img src="http://2.bp.blogspot.com/-y4bJjVXY8js/Tw7AcoHn8lI/AAAAAAAAAW4/hnLZO6ShvaQ/s1600/schema.PNG" alt="ssms screenshots" /></p>

<p><img src="http://2.bp.blogspot.com/-tkP3-E66KgQ/Tw7Ad9z8n1I/AAAAAAAAAXA/Vcu-JkjCZrc/s1600/memberships.PNG" alt="ssms screenshots" /></p>

<p><img src="http://1.bp.blogspot.com/-Q83_Po9kXN4/Tw7AfVHsCcI/AAAAAAAAAXI/AvdnqwrMTvA/s1600/users-table.PNG" alt="ssms screenshots" /></p>

<p>Hurrah - all the information you'll ever need is collected.</p>

<p>What?! You want to know more than name and email. Now <em>that's</em> a turn up for the books.</p>

<p>It turns out you can store key-value pairs in the profiles table. I think that anyone that wrote ASP dot Net websites will be old-hand at this but I've never had to do that or thisâ€¦</p>

<p>While you can do magic up a key-value pair whenever you feel the need to in your code it's probably better to use one of these new fangled Class thing-a-ma-bobs</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Web.Profile</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">AcrHack.Models</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">CustomProfile</span> <span class="p">:</span> <span class="n">ProfileBase</span>
    <span class="p">{</span>
        <span class="c1">//magic string</span>
        <span class="k">public</span> <span class="k">static</span> <span class="kt">string</span> <span class="n">ADDRESS</span> <span class="p">=</span> <span class="s">"address"</span><span class="p">;</span>

        <span class="k">public</span> <span class="kt">string</span> <span class="n">Address</span>
        <span class="p">{</span>
            <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="k">this</span><span class="p">[</span><span class="n">ADDRESS</span><span class="p">]</span> <span class="k">as</span> <span class="n">String</span><span class="p">;</span> <span class="p">}</span>
            <span class="k">set</span> <span class="p">{</span> <span class="k">this</span><span class="p">[</span><span class="n">ADDRESS</span><span class="p">]</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span> <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Now a quick edit to the web config above so that the providers opening tag becomes</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;profile</span> <span class="na">defaultprovider=</span><span class="s">"DefaultProfileProvider"</span> <span class="na">inherits=</span><span class="s">"AcrHack.Models.CustomProfile"</span><span class="nt">/&gt;</span>
</code></pre></div></div>

<p>which makes the Profile Provider aware of the new Profile class</p>

<p>Next step is to find the <code class="language-plaintext highlighter-rouge">RegisterModel</code> (this could be the <code class="language-plaintext highlighter-rouge">CreateModel</code> or some other model) and add an Address field</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="k">class</span> <span class="nc">RegisterModel</span>
<span class="p">{</span>
    <span class="p">[</span><span class="n">Required</span><span class="p">]</span>
    <span class="p">[</span><span class="nf">Display</span><span class="p">(</span><span class="n">Name</span> <span class="p">=</span> <span class="s">"User name"</span><span class="p">)]</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">UserName</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>

    <span class="p">[</span><span class="n">Required</span><span class="p">]</span>
    <span class="p">[</span><span class="nf">DataType</span><span class="p">(</span><span class="n">DataType</span><span class="p">.</span><span class="n">EmailAddress</span><span class="p">)]</span>
    <span class="p">[</span><span class="nf">Display</span><span class="p">(</span><span class="n">Name</span> <span class="p">=</span> <span class="s">"Email address"</span><span class="p">)]</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Email</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>

    <span class="p">[</span><span class="n">Required</span><span class="p">]</span>
    <span class="p">[</span><span class="nf">StringLength</span><span class="p">(</span><span class="m">100</span><span class="p">,</span> <span class="n">ErrorMessage</span> <span class="p">=</span> <span class="s">"The {0} must be at least {2} characters long."</span><span class="p">,</span> <span class="n">MinimumLength</span> <span class="p">=</span> <span class="m">6</span><span class="p">)]</span>
    <span class="p">[</span><span class="nf">DataType</span><span class="p">(</span><span class="n">DataType</span><span class="p">.</span><span class="n">Password</span><span class="p">)]</span>
    <span class="p">[</span><span class="nf">Display</span><span class="p">(</span><span class="n">Name</span> <span class="p">=</span> <span class="s">"Password"</span><span class="p">)]</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Password</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>

    <span class="p">[</span><span class="nf">DataType</span><span class="p">(</span><span class="n">DataType</span><span class="p">.</span><span class="n">Password</span><span class="p">)]</span>
    <span class="p">[</span><span class="nf">Display</span><span class="p">(</span><span class="n">Name</span> <span class="p">=</span> <span class="s">"Confirm password"</span><span class="p">)]</span>
    <span class="p">[</span><span class="nf">Compare</span><span class="p">(</span><span class="s">"Password"</span><span class="p">,</span> <span class="n">ErrorMessage</span> <span class="p">=</span> <span class="s">"The password and confirmation password do not match."</span><span class="p">)]</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">ConfirmPassword</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    
    <span class="c1">//Added Address field</span>
    <span class="p">[</span><span class="n">Required</span><span class="p">]</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Address</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>and edit the Register method in the controller</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="p">[</span><span class="n">HttpPost</span><span class="p">]</span>
<span class="k">public</span> <span class="n">ActionResult</span> <span class="nf">Register</span><span class="p">(</span><span class="n">RegisterModel</span> <span class="n">model</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">ModelState</span><span class="p">.</span><span class="n">IsValid</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="c1">// Attempt to register the user</span>
        <span class="n">MembershipCreateStatus</span> <span class="n">createStatus</span><span class="p">;</span>
        <span class="n">Membership</span><span class="p">.</span><span class="nf">CreateUser</span><span class="p">(</span><span class="n">model</span><span class="p">.</span><span class="n">UserName</span><span class="p">,</span> <span class="n">model</span><span class="p">.</span><span class="n">Password</span><span class="p">,</span> <span class="n">model</span><span class="p">.</span><span class="n">Email</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">true</span><span class="p">,</span> <span class="k">null</span><span class="p">,</span> <span class="k">out</span> <span class="n">createStatus</span><span class="p">);</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">createStatus</span> <span class="p">==</span> <span class="n">MembershipCreateStatus</span><span class="p">.</span><span class="n">Success</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">FormsAuthentication</span><span class="p">.</span><span class="nf">SetAuthCookie</span><span class="p">(</span><span class="n">model</span><span class="p">.</span><span class="n">UserName</span><span class="p">,</span> <span class="k">false</span><span class="p">);</span>
            <span class="c1">//Changes here</span>
            <span class="c1">//Create loads or creates a profile based on searching for username</span>
            <span class="kt">var</span> <span class="n">userProfile</span> <span class="p">=</span> <span class="n">ProfileBase</span><span class="p">.</span><span class="nf">Create</span><span class="p">(</span><span class="n">model</span><span class="p">.</span><span class="n">UserName</span><span class="p">)</span> <span class="k">as</span> <span class="n">CustomProfile</span><span class="p">;</span>
            <span class="n">userProfile</span><span class="p">.</span><span class="n">Address</span> <span class="p">=</span> <span class="n">model</span><span class="p">.</span><span class="n">Address</span><span class="p">;</span>
            <span class="n">userProfile</span><span class="p">.</span><span class="nf">Save</span><span class="p">();</span>
            <span class="c1">//End of changes</span>
            <span class="k">return</span> <span class="nf">RedirectToAction</span><span class="p">(</span><span class="s">"Index"</span><span class="p">,</span> <span class="s">"Home"</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="n">ModelState</span><span class="p">.</span><span class="nf">AddModelError</span><span class="p">(</span><span class="s">""</span><span class="p">,</span> <span class="nf">ErrorCodeToString</span><span class="p">(</span><span class="n">createStatus</span><span class="p">));</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="c1">// If we got this far, something failed, redisplay form</span>
    <span class="k">return</span> <span class="nf">View</span><span class="p">(</span><span class="n">model</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p><em>and</em> finally edit the view to add an editor field for the new property. (I'll leave that as an exercise for the reader)</p>

<p>Now we can go back to the Register page</p>

<p><img src="http://2.bp.blogspot.com/-TZWnNTSKRvY/Tw7HgUSY_jI/AAAAAAAAAXQ/zFssEVG51_4/s1600/new+registration+form+bit.PNG" alt="register page" /></p>

<p>Register and then have a look in the profile table.</p>

<p><img src="http://4.bp.blogspot.com/-oKVRwA7UVxM/Tw7Hnkm1AfI/AAAAAAAAAXY/hHvXOXRF3ug/s1600/persistedproperty.PNG" alt="profile table" /></p>

<p>Ta da!</p>

<p>So there's a mechanism for extending the default profile.</p>

<p>Honestly, it feels messy and since at this point if there's a need for any data access layer then since there'll be a link on user name or user id anyway it's likely a better idea to have the additional data in the DAL and fangle the authentication and user models together in a <code class="language-plaintext highlighter-rouge">ViewModel</code>.
<!--alex ignore he-she her-him--->
Having gone away and checked some code committed on another project by the lovely <a href="http://www.orangetentacle.co.uk/">OrangeTentacle</a> that's what he's done. So having figured it out for myself I'll probably go and crib off that much tidier code</p>

<p>Additional Reading:</p>

<p><a href="http://www.hanselman.com/blog/IntroducingSystemWebProvidersASPNETUniversalProvidersForSessionMembershipRolesAndUserProfileOnSQLCompactAndSQLAzure.aspx"><code class="language-plaintext highlighter-rouge">Simple.Web.Providers</code> announcement</a></p>

:ET